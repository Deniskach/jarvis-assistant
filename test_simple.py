import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ Python path
current_dir = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, current_dir)

print("üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –î–∂–∞—Ä–≤–∏—Å–∞...")

try:
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –£–ü–†–û–©–ï–ù–ù–´–ï –∫–ª–∞—Å—Å—ã
    from src.voice.stt_simple import SimpleSpeechRecognizer
    from src.voice.tts_simple import SimpleSpeechSynthesizer
    print("‚úÖ –£–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º TTS (—Å–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏)
    print("üîä –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–æ–ª–æ—Å...")
    tts = SimpleSpeechSynthesizer()
    tts.speak("–ü—Ä–∏–≤–µ—Ç! –Ø –î–∂–∞—Ä–≤–∏—Å. –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º STT (—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏)
    print("üé§ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ...")
    stt = SimpleSpeechRecognizer()
    
    print("\n" + "="*50)
    print("üéØ –î–∂–∞—Ä–≤–∏—Å –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
    print("  '–ø—Ä–∏–≤–µ—Ç' - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ")
    print("  '–≤—Ä–µ–º—è' - —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è") 
    print("  '–¥–∞—Ç–∞' - —Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞")
    print("  '—Å—Ç–æ–ø' - –≤—ã—Ö–æ–¥")
    print("="*50 + "\n")
    
    while True:
        text = stt.recognize()
        if text:
            text_lower = text.lower()
            
            if any(word in text_lower for word in ['–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', 'hello']):
                tts.speak("–ü—Ä–∏–≤–µ—Ç! –†–∞–¥ –≤–∞—Å —Å–ª—ã—à–∞—Ç—å!")
            elif '–≤—Ä–µ–º—è' in text_lower:
                from datetime import datetime
                current_time = datetime.now().strftime("%H:%M")
                tts.speak(f"–°–µ–π—á–∞—Å {current_time}")
            elif '–¥–∞—Ç–∞' in text_lower:
                from datetime import datetime
                current_date = datetime.now().strftime("%d %B %Y")
                tts.speak(f"–°–µ–≥–æ–¥–Ω—è {current_date}")
            elif any(word in text_lower for word in ['—Å—Ç–æ–ø', '–≤—ã—Ö–æ–¥', 'stop', 'exit']):
                tts.speak("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –í—ã–∫–ª—é—á–∞—é—Å—å.")
                break
            else:
                tts.speak("–ù–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
                
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤:")
    print("   - src/voice/stt_simple.py")
    print("   - src/voice/tts_simple.py")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤
    print("\nüìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ src/voice/:")
    try:
        voice_dir = os.path.join(current_dir, 'src', 'voice')
        if os.path.exists(voice_dir):
            for file in os.listdir(voice_dir):
                print(f"   - {file}")
        else:
            print("   –ü–∞–ø–∫–∞ src/voice/ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
    except Exception as dir_error:
        print(f"   –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {dir_error}")
        
except Exception as e:
    print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()

print("üëã –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")