"""
–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Vosk (–æ—Ñ—Ñ–ª–∞–π–Ω)
"""
import os
import json
import pyaudio
import sys

class VoskSpeechRecognizer:
    def __init__(self, model_path=None):
        self.model = None
        self.recognizer = None
        self.audio = None
        
        # –ü—É—Ç—å –∫ –º–æ–¥–µ–ª–∏
        if model_path is None:
            model_path = "models/vosk-model-small-ru-0.22"
        
        self.model_path = model_path
        self.setup_model()
    
    def setup_model(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –º–æ–¥–µ–ª—å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è"""
        try:
            print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª—å –≤: {os.path.abspath(self.model_path)}")
            
            if not os.path.exists(self.model_path):
                print(f"üì• –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ {self.model_path}")
                print("üîÑ –°–∫–∞—á–∏–≤–∞–µ–º –Ω–µ–±–æ–ª—å—à—É—é —Ä—É—Å—Å–∫—É—é –º–æ–¥–µ–ª—å...")
                self.download_model()
            
            print("üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å Vosk...")
            from vosk import Model, KaldiRecognizer
            self.model = Model(self.model_path)
            self.recognizer = KaldiRecognizer(self.model, 16000)
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º PyAudio –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏
            self.audio = pyaudio.PyAudio()
            
            print("‚úÖ –ú–æ–¥–µ–ª—å Vosk –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ")
            
        except ImportError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Vosk: {e}")
            print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω vosk: pip install vosk")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏ Vosk: {e}")
            import traceback
            traceback.print_exc()
    
    def download_model(self):
        """–°–∫–∞—á–∏–≤–∞–µ—Ç –º–æ–¥–µ–ª—å Vosk –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞"""
        try:
            import urllib.request
            import zipfile
            
            model_url = "https://alphacephei.com/vosk/models/vosk-model-small-ru-0.22.zip"
            zip_path = "models/vosk-model-small-ru-0.22.zip"
            
            # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É models –µ—Å–ª–∏ –Ω–µ—Ç
            os.makedirs("models", exist_ok=True)
            
            print(f"üì• –°–∫–∞—á–∏–≤–∞–µ–º –º–æ–¥–µ–ª—å –∏–∑ {model_url}...")
            urllib.request.urlretrieve(model_url, zip_path)
            
            print("üì¶ –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –º–æ–¥–µ–ª—å...")
            with zipfile.ZipFile(zip_path, 'r') as zip_ref:
                zip_ref.extractall("models/")
            
            # –£–¥–∞–ª—è–µ–º zip —Ñ–∞–π–ª
            os.remove(zip_path)
            print("‚úÖ –ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω–∞ –∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–∞")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–∏: {e}")
            print("üí° –°–∫–∞—á–∞–π—Ç–µ –≤—Ä—É—á–Ω—É—é: https://alphacephei.com/vosk/models")
            print("üí° –ò —Ä–∞—Å–ø–∞–∫—É–π—Ç–µ –≤ –ø–∞–ø–∫—É models/")
    
    def recognize(self):
        """–†–∞—Å–ø–æ–∑–Ω–∞–µ—Ç —Ä–µ—á—å –∏–∑ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞"""
        if self.recognizer is None or self.audio is None:
            print("‚ùå –ú–æ–¥–µ–ª—å –∏–ª–∏ –∞—É–¥–∏–æ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
            print("üí° –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º")
            return self.fallback_input()
        
        try:
            stream = self.audio.open(
                format=pyaudio.paInt16,
                channels=1,
                rate=16000,
                input=True,
                frames_per_buffer=8000
            )
            
            print("üé§ –ì–æ–≤–æ—Ä–∏—Ç–µ —Å–µ–π—á–∞—Å... (–¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C)")
            print("‚è≥ –°–ª—É—à–∞—é...", end='', flush=True)
            
            stream.start_stream()
            
            try:
                while True:
                    data = stream.read(4000, exception_on_overflow=False)
                    
                    if self.recognizer.AcceptWaveform(data):
                        result = json.loads(self.recognizer.Result())
                        text = result.get('text', '').strip()
                        if text:
                            print(f"\nüìù –†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: {text}")
                            stream.stop_stream()
                            stream.close()
                            return text.lower()
                    else:
                        # –ß–∞—Å—Ç–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                        partial_result = json.loads(self.recognizer.PartialResult())
                        partial_text = partial_result.get('partial', '')
                        if partial_text:
                            print(f"\r‚è≥ –°–ª—É—à–∞—é: {partial_text}...", end='', flush=True)
                            
            except KeyboardInterrupt:
                print("\n‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                stream.stop_stream()
                stream.close()
                return "—Å—Ç–æ–ø"
                
        except Exception as e:
            print(f"\n‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è: {e}")
            return self.fallback_input()
    
    def fallback_input(self):
        """–†–µ–∑–µ—Ä–≤–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥"""
        try:
            text = input("\nüé§ –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Ç–µ–∫—Å—Ç–æ–º: ")
            return text.lower()
        except (KeyboardInterrupt, EOFError):
            return "—Å—Ç–æ–ø"
    
    def __del__(self):
        if self.audio:
            self.audio.terminate()